package nes

type addressMode int

const (
	addrModeZeroPageX addressMode = iota
	addrModeZeroPageY
	addrModeAbsoluteX
	addrModeAbsoluteY
	addrModeIndexedIndir
	addrModeIndirIndexed
	addrModeImplied
	addrModeAccumulator
	addrModeImmediate
	addrModeZeroPage
	addrModeAbsolute
	addrModeRelative
	addrModeIndirect
)

// opcode mnemonics
const (
	and  = "AND"
	asl  = "ASL"
	bit  = "BIT"
	bpl  = "BPL"
	brk  = "BRK"
	clc  = "CLC"
	jsr  = "JSR"
	ora  = "ORA"
	php  = "PHP"
	rol  = "ROL"
	inop = "*NOP"
	irla = "*RLA"
	islo = "*SLO"
)

type instruction struct {
	mnemonic string
	addrMode addressMode
	bytes    int
	cycles   int
	fn       func(*Cpu, addressMode, uint16)
}

var opcodes = [256]instruction{
	0x00: {brk, addrModeImplied, 2, 7, (*Cpu).brk},
	0x01: {ora, addrModeIndexedIndir, 2, 6, (*Cpu).ora},
	0x03: {islo, addrModeIndexedIndir, 2, 8, (*Cpu).slo},
	0x04: {inop, addrModeZeroPage, 2, 3, (*Cpu).nop},
	0x05: {ora, addrModeZeroPage, 2, 3, (*Cpu).ora},
	0x06: {asl, addrModeZeroPage, 2, 5, (*Cpu).asl},
	0x07: {islo, addrModeZeroPage, 2, 5, (*Cpu).slo},
	0x08: {php, addrModeImplied, 1, 3, (*Cpu).php},
	0x09: {ora, addrModeImmediate, 2, 2, (*Cpu).ora},
	0x0A: {asl, addrModeAccumulator, 1, 2, (*Cpu).asl},
	0x0C: {inop, addrModeAbsolute, 3, 4, (*Cpu).nop},
	0x0D: {ora, addrModeAbsolute, 3, 4, (*Cpu).ora},
	0x0E: {asl, addrModeAbsolute, 3, 6, (*Cpu).asl},
	0x0F: {islo, addrModeAbsolute, 3, 6, (*Cpu).slo},
	0x10: {bpl, addrModeRelative, 2, 2, (*Cpu).bpl},
	0x11: {ora, addrModeIndirIndexed, 2, 5, (*Cpu).ora},
	0x13: {islo, addrModeIndirIndexed, 2, 8, (*Cpu).slo},
	0x14: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	0x15: {ora, addrModeZeroPageX, 2, 4, (*Cpu).ora},
	0x16: {asl, addrModeZeroPageX, 2, 6, (*Cpu).asl},
	0x17: {islo, addrModeZeroPageX, 2, 6, (*Cpu).slo},
	0x18: {clc, addrModeImplied, 1, 2, (*Cpu).clc},
	0x19: {ora, addrModeAbsoluteY, 3, 4, (*Cpu).ora},
	0x1A: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	0x1B: {islo, addrModeAbsoluteY, 3, 7, (*Cpu).slo},
	0x1C: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	0x1D: {ora, addrModeAbsoluteX, 3, 4, (*Cpu).ora},
	0x1E: {asl, addrModeAbsoluteX, 3, 7, (*Cpu).asl},
	0x1F: {islo, addrModeAbsoluteX, 3, 7, (*Cpu).slo},
	0x20: {jsr, addrModeAbsolute, 3, 6, (*Cpu).jsr},
	0x21: {and, addrModeIndexedIndir, 2, 6, (*Cpu).and},
	0x23: {irla, addrModeIndexedIndir, 2, 8, (*Cpu).rla},
	0x24: {bit, addrModeZeroPage, 2, 3, (*Cpu).bit},
	0x25: {and, addrModeZeroPage, 2, 3, (*Cpu).and},
	0x26: {rol, addrModeZeroPage, 2, 5, (*Cpu).rol},
	0x27: {irla, addrModeZeroPage, 2, 5, (*Cpu).rla},
	// 0x28: {plp, addrModeImplied, 1, 4, pullProcessorStatus},
	0x29: {and, addrModeImmediate, 2, 2, (*Cpu).and},
	0x2A: {rol, addrModeAccumulator, 1, 2, (*Cpu).rol},
	0x2C: {bit, addrModeAbsolute, 3, 4, (*Cpu).bit},
	0x2D: {and, addrModeAbsolute, 3, 4, (*Cpu).and},
	0x2E: {rol, addrModeAbsolute, 3, 6, (*Cpu).rol},
	0x2F: {irla, addrModeAbsolute, 3, 6, (*Cpu).rla},
	// 0x30: {bmi, addrModeRelative, 2, 2, branchIfMinus},
	0x31: {and, addrModeIndirIndexed, 2, 5, (*Cpu).and},
	0x33: {irla, addrModeIndirIndexed, 2, 8, (*Cpu).rla},
	0x34: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	0x35: {and, addrModeZeroPageX, 2, 4, (*Cpu).and},
	0x36: {rol, addrModeZeroPageX, 2, 6, (*Cpu).rol},
	0x37: {irla, addrModeZeroPageX, 2, 6, (*Cpu).rla},
	// 0x38: {sec, addrModeImplied, 1, 2, setCarry},
	0x39: {and, addrModeAbsoluteY, 3, 4, (*Cpu).and},
	0x3A: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	0x3B: {irla, addrModeAbsoluteY, 3, 7, (*Cpu).rla},
	0x3C: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	0x3D: {and, addrModeAbsoluteX, 3, 4, (*Cpu).and},
	0x3E: {rol, addrModeAbsoluteX, 3, 7, (*Cpu).rol},
	0x3F: {irla, addrModeAbsoluteX, 3, 7, (*Cpu).rla},
	// 0x40: {rti, addrModeImplied, 1, 6, returnFromInterrupt},
	// 0x41: {eor, addrModeIndexedIndir, 2, 6, bitwiseXor},
	// 0x43: {isre, addrModeIndexedIndir, 2, 8, illegalLogicalShiftRightAndBitwiseXor},
	0x44: {inop, addrModeZeroPage, 2, 3, (*Cpu).nop},
	// 0x45: {eor, addrModeZeroPage, 2, 3, bitwiseXor},
	// 0x46: {lsr, addrModeZeroPage, 2, 5, logicalShiftRight},
	// 0x47: {isre, addrModeZeroPage, 2, 5, illegalLogicalShiftRightAndBitwiseXor},
	// 0x48: {pha, addrModeImplied, 1, 3, pushA},
	// 0x49: {eor, addrModeImmediate, 2, 2, bitwiseXor},
	// 0x4A: {lsr, addrModeAccumulator, 1, 2, logicalShiftRight},
	// 0x4C: {jmp, addrModeAbsolute, 3, 3, jump},
	// 0x4D: {eor, addrModeAbsolute, 3, 4, bitwiseXor},
	// 0x4E: {lsr, addrModeAbsolute, 3, 6, logicalShiftRight},
	// 0x4F: {isre, addrModeAbsolute, 3, 6, illegalLogicalShiftRightAndBitwiseXor},
	// 0x50: {bvc, addrModeRelative, 2, 2, branchIfOverflowClear},
	// 0x51: {eor, addrModeIndirIndexed, 2, 5, bitwiseXor},
	// 0x53: {isre, addrModeIndirIndexed, 2, 8, illegalLogicalShiftRightAndBitwiseXor},
	0x54: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	// 0x55: {eor, addrModeZeroPageX, 2, 4, bitwiseXor},
	// 0x56: {lsr, addrModeZeroPageX, 2, 6, logicalShiftRight},
	// 0x57: {isre, addrModeZeroPageX, 2, 6, illegalLogicalShiftRightAndBitwiseXor},
	// 0x58: {cli, addrModeImplied, 1, 2, clearInterruptDisable},
	// 0x59: {eor, addrModeAbsoluteY, 3, 4, bitwiseXor},
	0x5A: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	// 0x5B: {isre, addrModeAbsoluteY, 3, 7, illegalLogicalShiftRightAndBitwiseXor},
	0x5C: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	// 0x5D: {eor, addrModeAbsoluteX, 3, 4, bitwiseXor},
	// 0x5E: {lsr, addrModeAbsoluteX, 3, 7, logicalShiftRight},
	// 0x5F: {isre, addrModeAbsoluteX, 3, 7, illegalLogicalShiftRightAndBitwiseXor},
	// 0x60: {rts, addrModeImplied, 1, 6, returnFromSubroutine},
	// 0x61: {adc, addrModeIndexedIndir, 2, 6, addWithCarry},
	// 0x63: {irra, addrModeIndexedIndir, 2, 8, illegalRotateRightAndAddWithCarry},
	0x64: {inop, addrModeZeroPage, 2, 3, (*Cpu).nop},
	// 0x65: {adc, addrModeZeroPage, 2, 3, addWithCarry},
	// 0x66: {ror, addrModeZeroPage, 2, 5, rotateRight},
	// 0x67: {irra, addrModeZeroPage, 2, 5, illegalRotateRightAndAddWithCarry},
	// 0x68: {pla, addrModeImplied, 1, 4, pullA},
	// 0x69: {adc, addrModeImmediate, 2, 2, addWithCarry},
	// 0x6A: {ror, addrModeAccumulator, 1, 2, rotateRight},
	// 0x6C: {jmp, addrModeIndirect, 3, 5, jump},
	// 0x6D: {adc, addrModeAbsolute, 3, 4, addWithCarry},
	// 0x6E: {ror, addrModeAbsolute, 3, 6, rotateRight},
	// 0x6F: {irra, addrModeAbsolute, 3, 6, illegalRotateRightAndAddWithCarry},
	// 0x70: {bvs, addrModeRelative, 2, 2, branchIfOverflowSet},
	// 0x71: {adc, addrModeIndirIndexed, 2, 5, addWithCarry},
	// 0x73: {irra, addrModeIndirIndexed, 2, 8, illegalRotateRightAndAddWithCarry},
	0x74: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	// 0x75: {adc, addrModeZeroPageX, 2, 4, addWithCarry},
	// 0x76: {ror, addrModeZeroPageX, 2, 6, rotateRight},
	// 0x77: {irra, addrModeZeroPageX, 2, 6, illegalRotateRightAndAddWithCarry},
	// 0x78: {sei, addrModeImplied, 1, 2, setInterruptDisable},
	// 0x79: {adc, addrModeAbsoluteY, 3, 4, addWithCarry},
	0x7A: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	// 0x7B: {irra, addrModeAbsoluteY, 3, 7, illegalRotateRightAndAddWithCarry},
	0x7C: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	// 0x7D: {adc, addrModeAbsoluteX, 3, 4, addWithCarry},
	// 0x7E: {ror, addrModeAbsoluteX, 3, 7, rotateRight},
	// 0x7F: {irra, addrModeAbsoluteX, 3, 7, illegalRotateRightAndAddWithCarry},
	0x80: {inop, addrModeImmediate, 2, 2, (*Cpu).nop},
	// 0x81: {sta, addrModeIndexedIndir, 2, 6, storeA},
	// 0x83: {isax, addrModeIndexedIndir, 2, 6, illegalStoreAAndX},
	// 0x84: {sty, addrModeZeroPage, 2, 3, storeY},
	// 0x85: {sta, addrModeZeroPage, 2, 3, storeA},
	// 0x86: {stx, addrModeZeroPage, 2, 3, storeX},
	// 0x87: {isax, addrModeZeroPage, 2, 3, illegalStoreAAndX},
	// 0x88: {dey, addrModeImplied, 1, 2, decrementY},
	// 0x8A: {txa, addrModeImplied, 1, 2, transferXToA},
	// 0x8C: {sty, addrModeAbsolute, 3, 4, storeY},
	// 0x8D: {sta, addrModeAbsolute, 3, 4, storeA},
	// 0x8E: {stx, addrModeAbsolute, 3, 4, storeX},
	// 0x8F: {isax, addrModeAbsolute, 3, 4, illegalStoreAAndX},
	// 0x90: {bcc, addrModeRelative, 2, 2, branchIfCarryClear},
	// 0x91: {sta, addrModeIndirIndexed, 2, 6, storeA},
	// 0x94: {sty, addrModeZeroPageX, 2, 4, storeY},
	// 0x95: {sta, addrModeZeroPageX, 2, 4, storeA},
	// 0x96: {stx, addrModeZeroPageY, 2, 4, storeX},
	// 0x97: {isax, addrModeZeroPageY, 2, 4, illegalStoreAAndX},
	// 0x98: {tya, addrModeImplied, 1, 2, transferYToA},
	// 0x99: {sta, addrModeAbsoluteY, 3, 5, storeA},
	// 0x9A: {txs, addrModeImplied, 1, 2, transferXToStackPointer},
	// 0x9D: {sta, addrModeAbsoluteX, 3, 5, storeA},
	// 0xA0: {ldy, addrModeImmediate, 2, 2, loadY},
	// 0xA1: {lda, addrModeIndexedIndir, 2, 6, loadA},
	// 0xA2: {ldx, addrModeImmediate, 2, 2, loadX},
	// 0xA3: {ilax, addrModeIndexedIndir, 2, 6, illegalLoadALoadX},
	// 0xA4: {ldy, addrModeZeroPage, 2, 3, loadY},
	// 0xA5: {lda, addrModeZeroPage, 2, 3, loadA},
	// 0xA6: {ldx, addrModeZeroPage, 2, 3, loadX},
	// 0xA7: {ilax, addrModeZeroPage, 2, 3, illegalLoadALoadX},
	// 0xA8: {tay, addrModeImplied, 1, 2, transferAToY},
	// 0xA9: {lda, addrModeImmediate, 2, 2, loadA},
	// 0xAA: {tax, addrModeImplied, 1, 2, transferAToX},
	// 0xAC: {ldy, addrModeAbsolute, 3, 4, loadY},
	// 0xAD: {lda, addrModeAbsolute, 3, 4, loadA},
	// 0xAE: {ldx, addrModeAbsolute, 3, 4, loadX},
	// 0xAF: {ilax, addrModeAbsolute, 3, 4, illegalLoadALoadX},
	// 0xB0: {bcs, addrModeRelative, 2, 2, branchIfCarrySet},
	// 0xB1: {lda, addrModeIndirIndexed, 2, 5, loadA},
	// 0xB3: {ilax, addrModeIndirIndexed, 2, 5, illegalLoadALoadX},
	// 0xB4: {ldy, addrModeZeroPageX, 2, 4, loadY},
	// 0xB5: {lda, addrModeZeroPageX, 2, 4, loadA},
	// 0xB6: {ldx, addrModeZeroPageY, 2, 4, loadX},
	// 0xB7: {ilax, addrModeZeroPageY, 2, 4, illegalLoadALoadX},
	// 0xB8: {clv, addrModeImplied, 1, 2, clearOverflow},
	// 0xB9: {lda, addrModeAbsoluteY, 3, 4, loadA},
	// 0xBA: {tsx, addrModeImplied, 1, 2, transferStackPointerToX},
	// 0xBC: {ldy, addrModeAbsoluteX, 3, 4, loadY},
	// 0xBD: {lda, addrModeAbsoluteX, 3, 4, loadA},
	// 0xBE: {ldx, addrModeAbsoluteY, 3, 4, loadX},
	// 0xBF: {ilax, addrModeAbsoluteY, 3, 4, illegalLoadALoadX},
	// 0xC0: {cpy, addrModeImmediate, 2, 2, compareY},
	// 0xC1: {cmp, addrModeIndexedIndir, 2, 6, compareA},
	// 0xC3: {idcp, addrModeIndexedIndir, 2, 8, illegalDecrementAndCompare},
	// 0xC4: {cpy, addrModeZeroPage, 2, 3, compareY},
	// 0xC5: {cmp, addrModeZeroPage, 2, 3, compareA},
	// 0xC6: {dec, addrModeZeroPage, 2, 5, decrementMemory},
	// 0xC7: {idcp, addrModeZeroPage, 2, 5, illegalDecrementAndCompare},
	// 0xC8: {iny, addrModeImplied, 1, 2, incrementY},
	// 0xC9: {cmp, addrModeImmediate, 2, 2, compareA},
	// 0xCA: {dex, addrModeImplied, 1, 2, decrementX},
	// 0xCC: {cpy, addrModeAbsolute, 3, 4, compareY},
	// 0xCD: {cmp, addrModeAbsolute, 3, 4, compareA},
	// 0xCE: {dec, addrModeAbsolute, 3, 6, decrementMemory},
	// 0xCF: {idcp, addrModeAbsolute, 3, 6, illegalDecrementAndCompare},
	// 0xD0: {bne, addrModeRelative, 2, 2, branchIfNotEqual},
	// 0xD1: {cmp, addrModeIndirIndexed, 2, 5, compareA},
	// 0xD3: {idcp, addrModeIndirIndexed, 2, 8, illegalDecrementAndCompare},
	0xD4: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	// 0xD5: {cmp, addrModeZeroPageX, 2, 4, compareA},
	// 0xD6: {dec, addrModeZeroPageX, 2, 6, decrementMemory},
	// 0xD7: {idcp, addrModeZeroPageX, 2, 6, illegalDecrementAndCompare},
	// 0xD8: {cld, addrModeImplied, 1, 2, clearDecimal},
	// 0xD9: {cmp, addrModeAbsoluteY, 3, 4, compareA},
	0xDA: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	// 0xDB: {idcp, addrModeAbsoluteY, 3, 7, illegalDecrementAndCompare},
	0xDC: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	// 0xDD: {cmp, addrModeAbsoluteX, 3, 4, compareA},
	// 0xDE: {dec, addrModeAbsoluteX, 3, 7, decrementMemory},
	// 0xDF: {idcp, addrModeAbsoluteX, 3, 7, illegalDecrementAndCompare},
	// 0xE0: {cpx, addrModeImmediate, 2, 2, compareX},
	// 0xE1: {sbc, addrModeIndexedIndir, 2, 6, subtractWithCarry},
	// 0xE3: {iisb, addrModeIndexedIndir, 2, 8, illegalIncrementSubtractWithCarry},
	// 0xE4: {cpx, addrModeZeroPage, 2, 3, compareX},
	// 0xE5: {sbc, addrModeZeroPage, 2, 3, subtractWithCarry},
	// 0xE6: {inc, addrModeZeroPage, 2, 5, incrementMemory},
	// 0xE7: {iisb, addrModeZeroPage, 2, 5, illegalIncrementSubtractWithCarry},
	// 0xE8: {inx, addrModeImplied, 1, 2, incrementX},
	// 0xE9: {sbc, addrModeImmediate, 2, 2, subtractWithCarry},
	// 0xEA: {nop, addrModeImplied, 1, 2, noOperation},
	// 0xEB: {isbc, addrModeImmediate, 2, 2, subtractWithCarry},
	// 0xEC: {cpx, addrModeAbsolute, 3, 4, compareX},
	// 0xED: {sbc, addrModeAbsolute, 3, 4, subtractWithCarry},
	// 0xEE: {inc, addrModeAbsolute, 3, 6, incrementMemory},
	// 0xEF: {iisb, addrModeAbsolute, 3, 6, illegalIncrementSubtractWithCarry},
	// 0xF0: {beq, addrModeRelative, 2, 2, branchIfEqual},
	// 0xF1: {sbc, addrModeIndirIndexed, 2, 5, subtractWithCarry},
	// 0xF3: {iisb, addrModeIndirIndexed, 2, 8, illegalIncrementSubtractWithCarry},
	0xF4: {inop, addrModeZeroPageX, 2, 4, (*Cpu).nop},
	// 0xF5: {sbc, addrModeZeroPageX, 2, 4, subtractWithCarry},
	// 0xF6: {inc, addrModeZeroPageX, 2, 6, incrementMemory},
	// 0xF7: {iisb, addrModeZeroPageX, 2, 6, illegalIncrementSubtractWithCarry},
	// 0xF8: {sed, addrModeImplied, 1, 2, setDecimal},
	// 0xF9: {sbc, addrModeAbsoluteY, 3, 4, subtractWithCarry},
	0xFA: {inop, addrModeImplied, 1, 2, (*Cpu).nop},
	// 0xFB: {iisb, addrModeAbsoluteY, 3, 7, illegalIncrementSubtractWithCarry},
	0xFC: {inop, addrModeAbsoluteX, 3, 4, (*Cpu).nop},
	// 0xFD: {sbc, addrModeAbsoluteX, 3, 4, subtractWithCarry},
	// 0xFE: {inc, addrModeAbsoluteX, 3, 7, incrementMemory},
	// 0xFF: {iisb, addrModeAbsoluteX, 3, 7, illegalIncrementSubtractWithCarry},
}
